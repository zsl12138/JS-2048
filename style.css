@keyframes fadeOut {
    0% {
        opacity: 0
    }

    100% {
        opacity: 1
    }
}

@keyframes move_left {
    0% {}

    100% {
        transform: translateX(-121.25px);
    }
}

@keyframes move_right {
    0% {}

    100% {
        transform: translateX(121.25px);
    }
}

@keyframes move_up {
    0% {}

    100% {
        transform: translateY(-121.25px);
    }
}

@keyframes move_down {
    0% {}

    100% {
        transform: translateY(121.25px);
    }
}
/* 方格出现或者合并动画 */
@keyframes appear {
    0% {
        opacity: 0;
        -webkit-transform: scale(0);
        -moz-transform: scale(0);
        -ms-transform: scale(0);
        transform: scale(0);
    }

    100% {
        opacity: 1;
        
        transform: scale(1.2);
    }
}
@keyframes addition{
    0%{
        opacity:1
    }
    100%{
        opacity: 0.4;
        transform: translateY(-50px);
    }
}
/* 出现动画的类参数 */
.tileAppear{
    animation-duration: 200ms;
    animation-timing-function: ease-in;
}
.addition {
    animation-duration: 400ms;
    animation-timing-function: ease-in;
}
/* 移动动画的类参数 */
.tileMove {
    animation-duration: 100ms;
    animation-fill-mode: backwards;
    animation-timing-function: linear;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: content-box;
}

a {
    text-decoration: none;
    font-weight: bold;
}

a:hover {
    color: #fff;
    list-style: none;
    text-decoration: none;
}

.clearfix:after {
    /*让父盒子戴上这个类名是第二种方法，推荐使用*/
    content: "";
    /* 必须是块级元素才能挡住 */
    display: block;
    /*插入元素必须是块级元素,不然没有clear属性 */
    clear: both;
    /*核心代码，清除浮动，也即闭合浮动,让父级div能自动获取到高度*/
    height: 0;
    visibility: hidden;
    /* 为了不看见这个元素*/
}

body {
    background-color: #faf8ef;
    color: #776e65;
    font-family: "Clear Sans", "Helvetica Neue", Arial, sans-serif;
    font-size: 18px;
}

body .container {
    margin: 100px auto 0px;
    width: 500px;

}

.container header {
    height: 112px;
}

.container header .title {
    display: block;
    float: left;
    line-height: 112px;
    color: #776e65;
    font-family: "Clear Sans", "Helvetica Neue", Arial, sans-serif;
    font-size: 80px;
    font-weight: bold;
}

.scores-container {
    float: right;
    position: relative;
}

.scores-container span {
    position: relative;
    display: inline-block;
    background: #bbada0;
    padding: 15px 25px;
    height: 25px;
    line-height: 45px;
    color: #fff;
    font-size: 25px;
    font-weight: bold;
    border-radius: 5px;
    text-align: center;
}
.scores-container div{
    display: none;
    position: absolute;
    left: 20px;
    bottom: 0;
    width: 20px;
    height: 20px;
    background: transparent;
    font-size: 25px;
    font-weight: bold;
    z-index: 3;
}

.scores-container .score::after {
    position: absolute;
    width: 100%;
    top: 10px;
    left: 0;
    content: "SCORE";
    text-transform: uppercase;
    font-size: 13px;
    color: #eee4da;
    line-height: 13px;
    text-align: center;

}

.scores-container .best::after {
    /* 用伪类加绝对定位 可以让html结构更简单一些 伪类的目的就是为了添加这种小标签的时候方便一些 */
    position: absolute;
    width: 100%;
    top: 10px;
    left: 0;
    content: "BEST";
    text-transform: uppercase;
    font-size: 13px;
    color: #eee4da;
    line-height: 13px;
    text-align: center;
}

body .join-game {
    margin: 10px 0;
    float: left;
}

.new-game {
    display: block;
    float: right;
    margin-left: 20px;
    height: 40px;
    line-height: 40px;
    padding: 0 20px;
    background-color: #8f7a66;
    color: #f9f6f2;
    text-align: center;
    border-radius: 3px;
}

.game-container {
    position: relative;
    margin-top: 40px;
    padding: 15px;
    background-color: #bbada0;
    width: 500px;
    height: 500px;
    border-radius: 6px;
    box-sizing: border-box;
}

.game-message {
    display: none;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(238, 228, 218, 0.5);
    z-index: 100;
    text-align: center;
    /* 这里是手动添加动画 */
    /* animation-duration: 2s;
    animation-name: none; */
}

.game-message p {
    font-size: 60px;
    font-weight: bold;
    height: 60px;
    line-height: 60px;
    margin-top: 170px;
}
.lower{
    margin-top: 70px;
}

.game-container .game-message a {
    display: inline-block;
    background: #8f7a66;
    border-radius: 3px;
    padding: 0 20px;
    text-decoration: none;
    color: #f9f6f2;
    height: 40px;
    line-height: 42px;
    margin-left: 9px;
}

.grid-container {
    position: absolute;
    z-index: 1;
}

.grid-row {
    margin-bottom: 15px;
}

/* 伪元素重点关注，用来清除浮动的 */
.grid-row::after {
    content: '';
    display: block;
    clear: both;
}

.grid-cell:nth-child(4) {
    margin-right: 0;
}

.grid-container .grid-cell {
    background: rgba(238, 228, 218, 0.35);
}

.grid-cell {
    position: relative;
    float: left;
    width: 106.25px;
    height: 106.25px;
    margin-right: 15px;
    border-radius: 3px;

}

.empty {
    background: transparent;
}

.occupied {
    font-weight: bold;
    font-size: 55px;
    text-align: center;
    line-height: 106.25px;
}

.tile-container {
    /* 这里必须设置绝对定位，绝对定位不占有实际位置
    这样tile-container才能在上层显示 */
    position: absolute;
    z-index: 2;
}